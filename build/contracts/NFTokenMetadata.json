{
  "contractName": "NFTokenMetadata",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional metadata implementation for ERC-721 non-fungible token standard.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"constructor\":{\"details\":\"Contract constructor.\"},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\",\"returns\":{\"_name\":\"Representing name.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_owner\":\"Address of _tokenId owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\",\"returns\":{\"_symbol\":\"Representing symbol.\"}},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"},\"returns\":{\"_0\":\"URI of _tokenId.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}}},\"stateVariables\":{\"idToUri\":{\"details\":\"Mapping from NFT ID to metadata uri.\"},\"nftName\":{\"details\":\"A descriptive name for a collection of NFTs.\"},\"nftSymbol\":{\"details\":\"An abbreviated name for NFTokens.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"constructor\":{\"notice\":\"When implementing this contract don't forget to set nftName and nftSymbol.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/abhuntu/solidity/contracts/tokens/nf-token-metadata.sol\":\"NFTokenMetadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/abhuntu/solidity/contracts/tokens/erc721-metadata.sol\":{\"keccak256\":\"0xbf316cfbd8b02ec69dbf6a78d1fa1300ec7944d73f51066d2a2b35897467dd8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab1e49bc4aac873ed54ef5bde342d15d6faa9b776685e67f626a42998f3c32e7\",\"dweb:/ipfs/QmdLqqC3YLsNorMUGZBAnEe2vgvaj2yJzBedDU1QA4YrSR\"]},\"/home/abhuntu/solidity/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0xeaf0ca76a4dc3746bf427d1cf21181ec951fae74e6514a751c2b8e06e40508d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://427765798598157ff17d4294334b9c41dadb9b2652a64329ca3d940d44b99ef5\",\"dweb:/ipfs/QmedBFE5VGmF89XJGRhTkJLF1tdzEH2dTbZchKZYTkR1rC\"]},\"/home/abhuntu/solidity/contracts/tokens/erc721.sol\":{\"keccak256\":\"0xe8a7d7d90e8c2a447c6d01e7b8178a7b4d2fb4f4354872e3dafde9de65db0173\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b06a1eb8b18d9996d2261184d9a9b9588abd51e96a95e8bf6280251190a3a1a\",\"dweb:/ipfs/QmW6gFv5v81jmfe7QcThaCUEqegznTiEMENnjfZgNDKaNH\"]},\"/home/abhuntu/solidity/contracts/tokens/nf-token-metadata.sol\":{\"keccak256\":\"0x579267ebc358e1ca84a68c3296d84f33ac5d193bb835db053eb51f3c0270ae46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16222b236c5a6f8fd15f874e3fad58811559684d5fc22f92243403404fcf8067\",\"dweb:/ipfs/QmZB1773agfBtvbeeZD2aNSLhFuLWQybMK8F3RxoDgCuur\"]},\"/home/abhuntu/solidity/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0x08968a831aba9ff00e0b3d2028d0f0a7a5c019742a77c875f065de05fa02f90a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://028a4c90b311121f646d3e20babafa7461a5a09831e1afca5199805a11b6ebd2\",\"dweb:/ipfs/QmPCFz5GptBwL1j1AiAWNJKB9ND1r5tijr8Jxpnue6rT9F\"]},\"/home/abhuntu/solidity/contracts/tokens/utils/address-utils.sol\":{\"keccak256\":\"0x8e0fb750db34358198bd15802ed9e10c78318386b13a98d0fa0ef8dd0e53d897\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87e6c3b0c2b6efba1671c841677eea094ef1068a9bd21080d8a9268c425f941d\",\"dweb:/ipfs/Qmb1kTWTQt1KxNrqEncLKnrnwLSZ4tJYTEtAat1ZYYjqeW\"]},\"/home/abhuntu/solidity/contracts/tokens/utils/erc165.sol\":{\"keccak256\":\"0xcf046151273ad518256893fd90eb59aee16fc771de52fcebc3e991994375642f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f19a4eb74966b5d790173c67ef62259c6fd78f7e9b1c33f0491a3e5e458ff98\",\"dweb:/ipfs/QmbaBwKcAjJWpqh4j9BaWadHpDGShNAu7qmPawpjftu2ZC\"]},\"/home/abhuntu/solidity/contracts/tokens/utils/supports-interface.sol\":{\"keccak256\":\"0x8c2748b9ca17e0b7ef71e664be817681379680e665ad1d8c239723dbabd0848c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://010abd974be5d91409631c519406b942eb7d31944e36c1062c96b58f9cb74c9c\",\"dweb:/ipfs/QmWbESJYoUzPjU5xhqymUnBx4TbXBvp99MqpfEZsppxhbd\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000806380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600080635b5e139f60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506123d9806101136000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611f64565b6102bc565b6040516100fb91906120e5565b60405180910390f35b61010c610323565b6040516101199190612100565b60405180910390f35b61013c60048036038101906101379190611fb6565b6103b5565b604051610149919061207e565b60405180910390f35b61016c60048036038101906101679190611f28565b6104d0565b005b61018860048036038101906101839190611e1d565b6108b3565b005b6101a4600480360381019061019f9190611e1d565b610d05565b005b6101c060048036038101906101bb9190611fb6565b610d25565b6040516101cd919061207e565b60405180910390f35b6101f060048036038101906101eb9190611db8565b610e0b565b6040516101fd9190612122565b60405180910390f35b61020e610ec5565b60405161021b9190612100565b60405180910390f35b61023e60048036038101906102399190611eec565b610f57565b005b61025a60048036038101906102559190611e6c565b611054565b005b61027660048036038101906102719190611fb6565b6110ab565b6040516102839190612100565b60405180910390f35b6102a660048036038101906102a19190611de1565b61122e565b6040516102b391906120e5565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054610332906122a6565b80601f016020809104026020016040519081016040528092919081815260200182805461035e906122a6565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a9190612100565b60405180910390fd5b506002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806105c95750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303033000000000000000000000000000000000000000000000000000081525090610640576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106379190612100565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061071d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107149190612100565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030380000000000000000000000000000000000000000000000000000815250906107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f49190612100565b60405180910390fd5b50856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061098457503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610a155750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a839190612100565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610b69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b609190612100565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090610c48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3f9190612100565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610cf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce89190612100565b60405180910390fd5b50610cfc86866112c2565b50505050505050565b610d2083838360405180602001604052806000815250611377565b505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfc9190612100565b60405180910390fd5b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610eb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eab9190612100565b60405180910390fd5b50610ebe82611945565b9050919050565b606060068054610ed4906122a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610f00906122a6565b8015610f4d5780601f10610f2257610100808354040283529160200191610f4d565b820191906000526020600020905b815481529060010190602001808311610f3057829003601f168201915b5050505050905090565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161104891906120e5565b60405180910390a35050565b6110a485858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611377565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611189576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111809190612100565b60405180910390fd5b506007600084815260200190815260200160002080546111a8906122a6565b80601f01602080910402602001604051908101604052809291908181526020018280546111d4906122a6565b80156112215780601f106111f657610100808354040283529160200191611221565b820191906000526020600020905b81548152906001019060200180831161120457829003601f168201915b5050505050915050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506113038261198e565b61130d81836119c7565b6113178383611b32565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061144857503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806114d95750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090611550576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115479190612100565b60405180910390fd5b5083600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061162d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116249190612100565b60405180910390fd5b5060006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f30303330303700000000000000000000000000000000000000000000000000008152509061170c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117039190612100565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030310000000000000000000000000000000000000000000000000000815250906117b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ac9190612100565b60405180910390fd5b506117c087876112c2565b6117df8773ffffffffffffffffffffffffffffffffffffffff16611cba565b1561193b5760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff1660e01b81526004016118259493929190612099565b602060405180830381600087803b15801561183f57600080fd5b505af1158015611853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118779190611f8d565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146040518060400160405280600681526020017f303033303035000000000000000000000000000000000000000000000000000081525090611938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192f9190612100565b60405180910390fd5b50505b5050505050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090611aa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a979190612100565b60405180910390fd5b506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611af191906121cb565b925050819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090611c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c039190612100565b60405180910390fd5b50816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611caf9190612175565b925050819055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015611cfc5750808214155b92505050919050565b600081359050611d1481612347565b92915050565b600081359050611d298161235e565b92915050565b600081359050611d3e81612375565b92915050565b600081519050611d5381612375565b92915050565b60008083601f840112611d6b57600080fd5b8235905067ffffffffffffffff811115611d8457600080fd5b602083019150836001820283011115611d9c57600080fd5b9250929050565b600081359050611db28161238c565b92915050565b600060208284031215611dca57600080fd5b6000611dd884828501611d05565b91505092915050565b60008060408385031215611df457600080fd5b6000611e0285828601611d05565b9250506020611e1385828601611d05565b9150509250929050565b600080600060608486031215611e3257600080fd5b6000611e4086828701611d05565b9350506020611e5186828701611d05565b9250506040611e6286828701611da3565b9150509250925092565b600080600080600060808688031215611e8457600080fd5b6000611e9288828901611d05565b9550506020611ea388828901611d05565b9450506040611eb488828901611da3565b935050606086013567ffffffffffffffff811115611ed157600080fd5b611edd88828901611d59565b92509250509295509295909350565b60008060408385031215611eff57600080fd5b6000611f0d85828601611d05565b9250506020611f1e85828601611d1a565b9150509250929050565b60008060408385031215611f3b57600080fd5b6000611f4985828601611d05565b9250506020611f5a85828601611da3565b9150509250929050565b600060208284031215611f7657600080fd5b6000611f8484828501611d2f565b91505092915050565b600060208284031215611f9f57600080fd5b6000611fad84828501611d44565b91505092915050565b600060208284031215611fc857600080fd5b6000611fd684828501611da3565b91505092915050565b611fe8816121ff565b82525050565b611ff781612211565b82525050565b60006120088261213d565b6120128185612153565b9350612022818560208601612273565b61202b81612336565b840191505092915050565b600061204182612148565b61204b8185612164565b935061205b818560208601612273565b61206481612336565b840191505092915050565b61207881612269565b82525050565b60006020820190506120936000830184611fdf565b92915050565b60006080820190506120ae6000830187611fdf565b6120bb6020830186611fdf565b6120c8604083018561206f565b81810360608301526120da8184611ffd565b905095945050505050565b60006020820190506120fa6000830184611fee565b92915050565b6000602082019050818103600083015261211a8184612036565b905092915050565b6000602082019050612137600083018461206f565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061218082612269565b915061218b83612269565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121c0576121bf6122d8565b5b828201905092915050565b60006121d682612269565b91506121e183612269565b9250828210156121f4576121f36122d8565b5b828203905092915050565b600061220a82612249565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015612291578082015181840152602081019050612276565b838111156122a0576000848401525b50505050565b600060028204905060018216806122be57607f821691505b602082108114156122d2576122d1612307565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b612350816121ff565b811461235b57600080fd5b50565b61236781612211565b811461237257600080fd5b50565b61237e8161221d565b811461238957600080fd5b50565b61239581612269565b81146123a057600080fd5b5056fea26469706673582212206b7d58af90a469124d7237f7a260ed5121b4b87ae934c3ffbd45f27b7988758264736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611f64565b6102bc565b6040516100fb91906120e5565b60405180910390f35b61010c610323565b6040516101199190612100565b60405180910390f35b61013c60048036038101906101379190611fb6565b6103b5565b604051610149919061207e565b60405180910390f35b61016c60048036038101906101679190611f28565b6104d0565b005b61018860048036038101906101839190611e1d565b6108b3565b005b6101a4600480360381019061019f9190611e1d565b610d05565b005b6101c060048036038101906101bb9190611fb6565b610d25565b6040516101cd919061207e565b60405180910390f35b6101f060048036038101906101eb9190611db8565b610e0b565b6040516101fd9190612122565b60405180910390f35b61020e610ec5565b60405161021b9190612100565b60405180910390f35b61023e60048036038101906102399190611eec565b610f57565b005b61025a60048036038101906102559190611e6c565b611054565b005b61027660048036038101906102719190611fb6565b6110ab565b6040516102839190612100565b60405180910390f35b6102a660048036038101906102a19190611de1565b61122e565b6040516102b391906120e5565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054610332906122a6565b80601f016020809104026020016040519081016040528092919081815260200182805461035e906122a6565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a9190612100565b60405180910390fd5b506002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806105c95750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303033000000000000000000000000000000000000000000000000000081525090610640576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106379190612100565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061071d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107149190612100565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030380000000000000000000000000000000000000000000000000000815250906107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f49190612100565b60405180910390fd5b50856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061098457503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610a155750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a839190612100565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610b69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b609190612100565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090610c48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3f9190612100565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610cf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce89190612100565b60405180910390fd5b50610cfc86866112c2565b50505050505050565b610d2083838360405180602001604052806000815250611377565b505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfc9190612100565b60405180910390fd5b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610eb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eab9190612100565b60405180910390fd5b50610ebe82611945565b9050919050565b606060068054610ed4906122a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610f00906122a6565b8015610f4d5780601f10610f2257610100808354040283529160200191610f4d565b820191906000526020600020905b815481529060010190602001808311610f3057829003601f168201915b5050505050905090565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161104891906120e5565b60405180910390a35050565b6110a485858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611377565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611189576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111809190612100565b60405180910390fd5b506007600084815260200190815260200160002080546111a8906122a6565b80601f01602080910402602001604051908101604052809291908181526020018280546111d4906122a6565b80156112215780601f106111f657610100808354040283529160200191611221565b820191906000526020600020905b81548152906001019060200180831161120457829003601f168201915b5050505050915050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506113038261198e565b61130d81836119c7565b6113178383611b32565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061144857503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806114d95750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090611550576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115479190612100565b60405180910390fd5b5083600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061162d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116249190612100565b60405180910390fd5b5060006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f30303330303700000000000000000000000000000000000000000000000000008152509061170c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117039190612100565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030310000000000000000000000000000000000000000000000000000815250906117b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ac9190612100565b60405180910390fd5b506117c087876112c2565b6117df8773ffffffffffffffffffffffffffffffffffffffff16611cba565b1561193b5760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff1660e01b81526004016118259493929190612099565b602060405180830381600087803b15801561183f57600080fd5b505af1158015611853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118779190611f8d565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146040518060400160405280600681526020017f303033303035000000000000000000000000000000000000000000000000000081525090611938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192f9190612100565b60405180910390fd5b50505b5050505050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090611aa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a979190612100565b60405180910390fd5b506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611af191906121cb565b925050819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090611c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c039190612100565b60405180910390fd5b50816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611caf9190612175565b925050819055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015611cfc5750808214155b92505050919050565b600081359050611d1481612347565b92915050565b600081359050611d298161235e565b92915050565b600081359050611d3e81612375565b92915050565b600081519050611d5381612375565b92915050565b60008083601f840112611d6b57600080fd5b8235905067ffffffffffffffff811115611d8457600080fd5b602083019150836001820283011115611d9c57600080fd5b9250929050565b600081359050611db28161238c565b92915050565b600060208284031215611dca57600080fd5b6000611dd884828501611d05565b91505092915050565b60008060408385031215611df457600080fd5b6000611e0285828601611d05565b9250506020611e1385828601611d05565b9150509250929050565b600080600060608486031215611e3257600080fd5b6000611e4086828701611d05565b9350506020611e5186828701611d05565b9250506040611e6286828701611da3565b9150509250925092565b600080600080600060808688031215611e8457600080fd5b6000611e9288828901611d05565b9550506020611ea388828901611d05565b9450506040611eb488828901611da3565b935050606086013567ffffffffffffffff811115611ed157600080fd5b611edd88828901611d59565b92509250509295509295909350565b60008060408385031215611eff57600080fd5b6000611f0d85828601611d05565b9250506020611f1e85828601611d1a565b9150509250929050565b60008060408385031215611f3b57600080fd5b6000611f4985828601611d05565b9250506020611f5a85828601611da3565b9150509250929050565b600060208284031215611f7657600080fd5b6000611f8484828501611d2f565b91505092915050565b600060208284031215611f9f57600080fd5b6000611fad84828501611d44565b91505092915050565b600060208284031215611fc857600080fd5b6000611fd684828501611da3565b91505092915050565b611fe8816121ff565b82525050565b611ff781612211565b82525050565b60006120088261213d565b6120128185612153565b9350612022818560208601612273565b61202b81612336565b840191505092915050565b600061204182612148565b61204b8185612164565b935061205b818560208601612273565b61206481612336565b840191505092915050565b61207881612269565b82525050565b60006020820190506120936000830184611fdf565b92915050565b60006080820190506120ae6000830187611fdf565b6120bb6020830186611fdf565b6120c8604083018561206f565b81810360608301526120da8184611ffd565b905095945050505050565b60006020820190506120fa6000830184611fee565b92915050565b6000602082019050818103600083015261211a8184612036565b905092915050565b6000602082019050612137600083018461206f565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061218082612269565b915061218b83612269565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121c0576121bf6122d8565b5b828201905092915050565b60006121d682612269565b91506121e183612269565b9250828210156121f4576121f36122d8565b5b828203905092915050565b600061220a82612249565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015612291578082015181840152602081019050612276565b838111156122a0576000848401525b50505050565b600060028204905060018216806122be57607f821691505b602082108114156122d2576122d1612307565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b612350816121ff565b811461235b57600080fd5b50565b61236781612211565b811461237257600080fd5b50565b61237e8161221d565b811461238957600080fd5b50565b61239581612269565b81146123a057600080fd5b5056fea26469706673582212206b7d58af90a469124d7237f7a260ed5121b4b87ae934c3ffbd45f27b7988758264736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10802:15",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:15"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:15",
                "type": ""
              }
            ],
            "src": "7:139:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "201:84:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "211:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "233:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "220:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "220:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "211:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "273:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "249:23:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:30:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:30:15"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "179:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "187:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "195:5:15",
                "type": ""
              }
            ],
            "src": "152:133:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "342:86:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "352:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "374:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "361:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "361:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "352:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "416:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "390:25:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:32:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "390:32:15"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "320:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "328:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "336:5:15",
                "type": ""
              }
            ],
            "src": "291:137:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "496:79:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "506:22:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "521:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "515:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "515:13:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "506:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "563:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "537:25:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:32:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "537:32:15"
                }
              ]
            },
            "name": "abi_decode_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "474:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "482:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "490:5:15",
                "type": ""
              }
            ],
            "src": "434:141:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "668:277:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "717:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "726:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "729:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "719:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "719:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "719:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "696:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "704:4:15",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "692:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "692:17:15"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "711:3:15"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:27:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "681:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:35:15"
                  },
                  "nodeType": "YulIf",
                  "src": "678:2:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "742:30:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "765:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "752:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "742:6:15"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "815:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "824:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "827:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "817:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "817:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "787:6:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "795:18:15",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "784:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:30:15"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "840:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "856:6:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "864:4:15",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "852:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:17:15"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "840:8:15"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "923:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "932:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "935:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "925:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "925:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "925:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "888:8:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "902:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "910:4:15",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "898:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "898:17:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "884:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "884:32:15"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "918:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "881:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "881:41:15"
                  },
                  "nodeType": "YulIf",
                  "src": "878:2:15"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "635:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "643:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "651:8:15",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "661:6:15",
                "type": ""
              }
            ],
            "src": "594:351:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1003:87:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1013:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1035:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1022:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1022:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1013:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1078:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1051:26:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:33:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1051:33:15"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "981:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "989:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "997:5:15",
                "type": ""
              }
            ],
            "src": "951:139:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1162:196:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1208:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1217:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1220:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1210:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1210:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1210:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1183:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1192:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1179:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1179:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1204:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1175:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1175:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1172:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1234:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1249:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1263:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1253:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1278:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1313:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1324:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1309:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1309:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1333:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1288:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1278:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1132:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1143:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1155:6:15",
                "type": ""
              }
            ],
            "src": "1096:262:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1447:324:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1493:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1502:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1505:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1495:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1495:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1495:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1468:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1477:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1464:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1464:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1489:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1460:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1460:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1457:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1519:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1534:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1548:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1538:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1563:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1598:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1609:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1594:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1594:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1618:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1573:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1573:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1563:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1646:118:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1661:16:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1675:2:15",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1665:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1691:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1726:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1737:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1722:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1722:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1746:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1701:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1701:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1691:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1409:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1420:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1432:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1440:6:15",
                "type": ""
              }
            ],
            "src": "1364:407:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1877:452:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1923:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1932:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1935:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1925:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1925:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1925:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1898:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1907:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1894:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1894:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1919:2:15",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1890:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1890:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1887:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1949:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1964:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1978:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1968:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1993:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2028:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2039:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2024:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2024:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2048:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2003:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1993:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2076:118:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2091:16:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2105:2:15",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2095:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2121:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2156:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2167:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2152:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2152:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2176:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2131:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2131:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2121:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2204:118:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2219:16:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2233:2:15",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2223:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2249:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2284:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2295:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2280:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2280:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2304:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2259:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2259:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2249:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1831:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1842:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1854:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1862:6:15",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1870:6:15",
                "type": ""
              }
            ],
            "src": "1777:552:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2471:693:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2518:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2527:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2530:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2520:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2520:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2520:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2492:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2501:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2488:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2488:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2513:3:15",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2484:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:33:15"
                  },
                  "nodeType": "YulIf",
                  "src": "2481:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2544:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2559:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2573:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2563:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2588:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2623:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2634:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2619:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2619:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2643:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2598:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2598:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2588:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2671:118:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2686:16:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2700:2:15",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2690:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2716:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2751:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2762:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2747:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2747:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2771:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2726:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2726:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2716:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2799:118:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2814:16:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2828:2:15",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2818:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2844:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2879:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2890:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2875:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2875:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2899:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2854:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2854:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2844:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2927:230:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2942:46:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2973:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2984:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2969:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2969:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2956:12:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2956:32:15"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2946:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3035:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3044:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3047:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3037:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3037:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3037:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3007:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3015:18:15",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3004:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3004:30:15"
                      },
                      "nodeType": "YulIf",
                      "src": "3001:2:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3065:82:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3119:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3130:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3115:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3115:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3139:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3083:31:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3083:64:15"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3065:6:15"
                        },
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3073:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2409:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2420:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2432:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2440:6:15",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2448:6:15",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2456:6:15",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2464:6:15",
                "type": ""
              }
            ],
            "src": "2335:829:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3250:321:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3296:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3305:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3308:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3298:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3298:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3298:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3271:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3280:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3267:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3267:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3292:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3263:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3263:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "3260:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3322:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3337:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3351:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3341:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3366:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3401:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3412:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3397:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3397:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3421:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3376:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3376:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3366:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3449:115:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3464:16:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3478:2:15",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3468:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3494:60:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3526:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3537:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3522:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3522:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3546:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3504:17:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3504:50:15"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3494:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3212:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3223:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3235:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3243:6:15",
                "type": ""
              }
            ],
            "src": "3170:401:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3660:324:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3706:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3715:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3718:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3708:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3708:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3708:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3681:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3690:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3677:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3677:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3702:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3673:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3673:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "3670:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3732:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3747:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3761:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3751:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3776:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3811:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3822:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3807:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3807:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3831:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3786:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3786:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3776:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3859:118:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3874:16:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3888:2:15",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3878:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3904:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3939:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3950:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3935:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3935:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3959:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3914:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3914:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3904:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3622:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3633:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3645:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3653:6:15",
                "type": ""
              }
            ],
            "src": "3577:407:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4055:195:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4101:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4110:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4113:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4103:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4103:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4103:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4076:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4085:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4072:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4072:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4097:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4068:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4068:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "4065:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4127:116:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4142:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4156:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4146:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4171:62:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4205:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4216:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4201:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4201:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4225:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "4181:19:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4181:52:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4171:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4025:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4036:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4048:6:15",
                "type": ""
              }
            ],
            "src": "3990:260:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4332:206:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4378:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4387:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4390:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4380:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4380:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4380:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4353:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4362:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4349:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4349:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4374:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4345:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4345:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "4342:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4404:127:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4419:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4433:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4423:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4448:73:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4493:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4504:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4489:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4489:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4513:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4458:30:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4458:63:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4448:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4302:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4313:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4325:6:15",
                "type": ""
              }
            ],
            "src": "4256:282:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4610:196:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4656:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4665:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4668:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4658:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4658:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4658:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4631:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4640:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4627:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4627:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4652:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4623:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4623:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "4620:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4682:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4697:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4711:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4701:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4726:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4761:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4772:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4757:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4757:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4781:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4736:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4736:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4726:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4580:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4591:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4603:6:15",
                "type": ""
              }
            ],
            "src": "4544:262:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4877:53:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4894:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4917:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4899:17:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4899:24:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4887:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4887:37:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4887:37:15"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4865:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4872:3:15",
                "type": ""
              }
            ],
            "src": "4812:118:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4995:50:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5012:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5032:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5017:14:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5017:21:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5005:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5005:34:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5005:34:15"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4983:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4990:3:15",
                "type": ""
              }
            ],
            "src": "4936:109:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5141:270:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5151:52:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5197:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5165:31:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5165:38:15"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5155:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5212:77:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5277:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5282:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5219:57:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5219:70:15"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5212:3:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5324:5:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5331:4:15",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5320:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5320:16:15"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5338:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5343:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5298:21:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5298:52:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5298:52:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5359:46:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5370:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5397:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5375:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5375:29:15"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5366:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5366:39:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5359:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5122:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5129:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5137:3:15",
                "type": ""
              }
            ],
            "src": "5051:360:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5509:272:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5519:53:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5566:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5533:32:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5533:39:15"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5523:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5581:78:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5647:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5652:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5588:58:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5588:71:15"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5581:3:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5694:5:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5701:4:15",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5690:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5690:16:15"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5708:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5713:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5668:21:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5668:52:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5668:52:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5729:46:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5740:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5767:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5745:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5745:29:15"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5736:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5736:39:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5729:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5490:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5497:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5505:3:15",
                "type": ""
              }
            ],
            "src": "5417:364:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5852:53:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5869:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5892:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5874:17:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5874:24:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5862:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5862:37:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5862:37:15"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5840:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5847:3:15",
                "type": ""
              }
            ],
            "src": "5787:118:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6009:124:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6019:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6031:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6042:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6027:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6019:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6099:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6112:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6123:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6108:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6108:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6055:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6055:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6055:71:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5981:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5993:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6004:4:15",
                "type": ""
              }
            ],
            "src": "5911:222:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6339:440:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6349:27:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6361:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6372:3:15",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6357:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6357:19:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6349:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6430:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6443:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6454:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6439:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6439:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6386:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6386:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6386:71:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6511:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6524:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6535:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6520:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6520:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6467:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6467:72:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6467:72:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6593:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6606:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6617:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6602:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6602:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6549:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6549:72:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6549:72:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6642:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6653:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6638:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6638:18:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6662:4:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6668:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6658:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6658:20:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6631:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6631:48:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6631:48:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6688:84:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6758:6:15"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6767:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6696:61:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6696:76:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6688:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6287:9:15",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6299:6:15",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6307:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6315:6:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6323:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6334:4:15",
                "type": ""
              }
            ],
            "src": "6139:640:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6877:118:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6887:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6899:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6910:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6895:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6895:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6887:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6961:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6974:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6985:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6970:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6970:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6923:37:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6923:65:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6923:65:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6849:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6861:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6872:4:15",
                "type": ""
              }
            ],
            "src": "6785:210:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7119:195:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7129:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7141:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7152:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7137:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7137:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7129:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7176:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7187:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7172:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7172:17:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7195:4:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7201:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7191:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7191:20:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7165:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7165:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7165:47:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7221:86:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7293:6:15"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7302:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7229:63:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7229:78:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7221:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7091:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7103:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7114:4:15",
                "type": ""
              }
            ],
            "src": "7001:313:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7418:124:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7428:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7440:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7451:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7436:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7436:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7428:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7508:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7521:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7532:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7517:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7517:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7464:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7464:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7464:71:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7390:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7402:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7413:4:15",
                "type": ""
              }
            ],
            "src": "7320:222:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7606:40:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7617:22:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7633:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7627:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7627:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7617:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7589:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7599:6:15",
                "type": ""
              }
            ],
            "src": "7548:98:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7711:40:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7722:22:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7738:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7732:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7732:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7722:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7694:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7704:6:15",
                "type": ""
              }
            ],
            "src": "7652:99:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7852:73:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7869:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7874:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7862:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7862:19:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7862:19:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7890:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7909:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7914:4:15",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7905:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7905:14:15"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7890:11:15"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7824:3:15",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7829:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7840:11:15",
                "type": ""
              }
            ],
            "src": "7757:168:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8027:73:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8044:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8049:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8037:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8037:19:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8037:19:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8065:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8084:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8089:4:15",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8080:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8080:14:15"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8065:11:15"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7999:3:15",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8004:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8015:11:15",
                "type": ""
              }
            ],
            "src": "7931:169:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8150:261:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8160:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8183:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8165:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8165:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8160:1:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8194:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8217:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8199:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8199:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8194:1:15"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8357:22:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8359:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8359:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8359:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8278:1:15"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8285:66:15",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8353:1:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8281:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8281:74:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8275:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8275:81:15"
                  },
                  "nodeType": "YulIf",
                  "src": "8272:2:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8389:16:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8400:1:15"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8403:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8396:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8396:9:15"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8389:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8137:1:15",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8140:1:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8146:3:15",
                "type": ""
              }
            ],
            "src": "8106:305:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8462:146:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8472:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8495:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8477:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8477:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8472:1:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8506:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8529:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8511:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8511:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8506:1:15"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8553:22:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8555:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8555:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8555:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8547:1:15"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8550:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8544:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8544:8:15"
                  },
                  "nodeType": "YulIf",
                  "src": "8541:2:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8585:17:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8597:1:15"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8600:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8593:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8593:9:15"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8585:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8448:1:15",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8451:1:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8457:4:15",
                "type": ""
              }
            ],
            "src": "8417:191:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8659:51:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8669:35:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8698:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8680:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8680:24:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8669:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8641:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8651:7:15",
                "type": ""
              }
            ],
            "src": "8614:96:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8758:48:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8768:32:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8793:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8786:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8786:13:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8779:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8779:21:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8768:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8740:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8750:7:15",
                "type": ""
              }
            ],
            "src": "8716:90:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8856:105:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8866:89:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8881:5:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8888:66:15",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8877:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8877:78:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8866:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8838:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8848:7:15",
                "type": ""
              }
            ],
            "src": "8812:149:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9012:81:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9022:65:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9037:5:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9044:42:15",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9033:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9033:54:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9022:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8994:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9004:7:15",
                "type": ""
              }
            ],
            "src": "8967:126:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9144:32:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9154:16:15",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9165:5:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9154:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9126:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9136:7:15",
                "type": ""
              }
            ],
            "src": "9099:77:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9231:258:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9241:10:15",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9250:1:15",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9245:1:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9310:63:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9335:3:15"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "9340:1:15"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9331:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9331:11:15"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "9354:3:15"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9359:1:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9350:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9350:11:15"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9344:5:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9344:18:15"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9324:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9324:39:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9324:39:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9271:1:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9274:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9268:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9268:13:15"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9282:19:15",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9284:15:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9293:1:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9296:2:15",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9289:3:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9289:10:15"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9284:1:15"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9264:3:15",
                    "statements": []
                  },
                  "src": "9260:113:15"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9407:76:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9457:3:15"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "9462:6:15"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9453:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9453:16:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9471:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9446:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9446:27:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9446:27:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9388:1:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9391:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9385:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9385:13:15"
                  },
                  "nodeType": "YulIf",
                  "src": "9382:2:15"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9213:3:15",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9218:3:15",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9223:6:15",
                "type": ""
              }
            ],
            "src": "9182:307:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9546:269:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9556:22:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9570:4:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9576:1:15",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9566:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9566:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9556:6:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9587:38:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9617:4:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9623:1:15",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9613:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9613:12:15"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "9591:18:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9664:51:15",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9678:27:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "9692:6:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9700:4:15",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9688:3:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9688:17:15"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9678:6:15"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9644:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9637:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9637:26:15"
                  },
                  "nodeType": "YulIf",
                  "src": "9634:2:15"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9767:42:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "9781:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9781:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9781:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9731:18:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9754:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9762:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "9751:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9751:14:15"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9728:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9728:38:15"
                  },
                  "nodeType": "YulIf",
                  "src": "9725:2:15"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "9530:4:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9539:6:15",
                "type": ""
              }
            ],
            "src": "9495:320:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9849:152:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9866:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9869:77:15",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9859:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9859:88:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9859:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9963:1:15",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9966:4:15",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9956:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9956:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9956:15:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9987:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9990:4:15",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9980:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9980:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9980:15:15"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9821:180:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10035:152:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10052:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10055:77:15",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10045:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10045:88:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10045:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10149:1:15",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10152:4:15",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10142:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10142:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10142:15:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10173:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10176:4:15",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10166:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10166:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10166:15:15"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "10007:180:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10241:54:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10251:38:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10269:5:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10276:2:15",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10265:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10265:14:15"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10285:2:15",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10281:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10281:7:15"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10261:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10261:28:15"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "10251:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10224:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "10234:6:15",
                "type": ""
              }
            ],
            "src": "10193:102:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10344:79:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10401:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10410:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10413:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10403:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10403:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10403:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10367:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10392:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "10374:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10374:24:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10364:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10364:35:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10357:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10357:43:15"
                  },
                  "nodeType": "YulIf",
                  "src": "10354:2:15"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10337:5:15",
                "type": ""
              }
            ],
            "src": "10301:122:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10469:76:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10523:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10532:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10535:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10525:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10525:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10525:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10492:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10514:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10499:14:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10499:21:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10489:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10489:32:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10482:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10482:40:15"
                  },
                  "nodeType": "YulIf",
                  "src": "10479:2:15"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10462:5:15",
                "type": ""
              }
            ],
            "src": "10429:116:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10593:78:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10649:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10658:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10661:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10651:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10651:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10651:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10616:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10640:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "10623:16:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10623:23:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10613:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10613:34:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10606:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10606:42:15"
                  },
                  "nodeType": "YulIf",
                  "src": "10603:2:15"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10586:5:15",
                "type": ""
              }
            ],
            "src": "10551:120:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10720:79:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10777:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10786:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10789:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10779:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10779:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10779:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10743:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10768:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "10750:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10750:24:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10740:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10740:35:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10733:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10733:43:15"
                  },
                  "nodeType": "YulIf",
                  "src": "10730:2:15"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10713:5:15",
                "type": ""
              }
            ],
            "src": "10677:122:15"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 15,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "214:2421:10:-:0;;;696:83;;;;;;;;;;472:4:14;438:19;:31;458:10;438:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2817:4:11;2783:19;:31;2803:10;2783:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;752:4:10;718:19;:31;738:10;718:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;214:2421;;;;;;",
  "deployedSourceMap": "214:2421:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:163:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;900:113:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7915:173:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5776:338;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5026;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4292:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7481:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7025:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1123:121:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6516:223:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3694:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1390:171:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8349:182:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;694:163:14;798:4;819:19;:33;839:12;819:33;;;;;;;;;;;;;;;;;;;;;;;;;;;812:40;;694:163;;;:::o;900:113:10:-;964:19;1001:7;993:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:113;:::o;7915:173:11:-;8037:7;8014:8;2683:1;2652:33;;:9;:19;2662:8;2652:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2687:13;;;;;;;;;;;;;;;;;2644:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8061:12:::1;:22;8074:8;8061:22;;;;;;;;;;;;;;;;;;;;;8054:29;;7915:173:::0;;;;:::o;5776:338::-;5883:8;1870:18;1891:9;:19;1901:8;1891:19;;;;;;;;;;;;;;;;;;;;;1870:40;;1945:10;1931:24;;:10;:24;;;:68;;;;1959:16;:28;1976:10;1959:28;;;;;;;;;;;;;;;:40;1988:10;1959:40;;;;;;;;;;;;;;;;;;;;;;;;;1931:68;2007:21;;;;;;;;;;;;;;;;;1916:118;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5910:8:::1;2683:1;2652:33;;:9;:19;2662:8;2652:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2687:13;;;;;;;;;;;;;;;;::::0;2644:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5928:18:::2;5949:9;:19;5959:8;5949:19;;;;;;;;;;;;;;;;;;;;;5928:40;;5995:10;5982:23;;:9;:23;;;;6007:8;;;;;;;;;;;;;;;;::::0;5974:42:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6048:9;6023:12;:22;6036:8;6023:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;6100:8;6089:9;6068:41;;6077:10;6068:41;;;;;;;;;;;;2707:1;2040::::1;5776:338:::0;;;;:::o;5026:::-;5152:8;2234:18;2255:9;:19;2265:8;2255:19;;;;;;;;;;;;;;;;;;;;;2234:40;;2309:10;2295:24;;:10;:24;;;:70;;;;2355:10;2329:36;;:12;:22;2342:8;2329:22;;;;;;;;;;;;;;;;;;;;;:36;;;2295:70;:120;;;;2375:16;:28;2392:10;2375:28;;;;;;;;;;;;;;;:40;2404:10;2375:40;;;;;;;;;;;;;;;;;;;;;;;;;2295:120;2423:30;;;;;;;;;;;;;;;;;2280:179;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5179:8:::1;2683:1;2652:33;;:9;:19;2662:8;2652:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2687:13;;;;;;;;;;;;;;;;::::0;2644:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5197:18:::2;5218:9;:19;5228:8;5218:19;;;;;;;;;;;;;;;;;;;;;5197:40;;5265:5;5251:19;;:10;:19;;;5272:9;;;;;;;;;;;;;;;;::::0;5243:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5311:1;5296:17;;:3;:17;;;;5315:12;;;;;;;;;;;;;;;;::::0;5288:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5335:24;5345:3;5350:8;5335:9;:24::i;:::-;2707:1;2465::::1;5026:338:::0;;;;;:::o;4292:170::-;4414:43;4432:5;4439:3;4444:8;4414:43;;;;;;;;;;;;:17;:43::i;:::-;4292:170;;;:::o;7481:198::-;7572:14;7605:9;:19;7615:8;7605:19;;;;;;;;;;;;;;;;;;;;;7596:28;;7656:1;7638:20;;:6;:20;;;;7660:13;;;;;;;;;;;;;;;;;7630:44;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7481:198;;;:::o;7025:194::-;7116:7;7159:1;7141:20;;:6;:20;;;;7163:12;;;;;;;;;;;;;;;;;7133:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7189:25;7207:6;7189:17;:25::i;:::-;7182:32;;7025:194;;;:::o;1123:121:10:-;1189:21;1230:9;1220:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:121;:::o;6516:223:11:-;6666:9;6624:16;:28;6641:10;6624:28;;;;;;;;;;;;;;;:39;6653:9;6624:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;6713:9;6686:48;;6701:10;6686:48;;;6724:9;6686:48;;;;;;:::i;:::-;;;;;;;;6516:223;;:::o;3694:199::-;3842:46;3860:5;3867:3;3872:8;3882:5;;3842:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;3694:199;;;;;:::o;1390:171:10:-;1509:13;1486:8;2683:1:11;2652:33;;:9;:19;2662:8;2652:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2687:13;;;;;;;;;;;;;;;;;2644:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1539:7:10::1;:17;1547:8;1539:17;;;;;;;;;;;1532:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:171:::0;;;;:::o;8349:182:11:-;8470:4;8491:16;:24;8508:6;8491:24;;;;;;;;;;;;;;;:35;8516:9;8491:35;;;;;;;;;;;;;;;;;;;;;;;;;8484:42;;8349:182;;;;:::o;8714:262::-;8797:12;8812:9;:19;8822:8;8812:19;;;;;;;;;;;;;;;;;;;;;8797:34;;8837:24;8852:8;8837:14;:24::i;:::-;8868:30;8883:4;8889:8;8868:14;:30::i;:::-;8904:26;8916:3;8921:8;8904:11;:26::i;:::-;8962:8;8957:3;8942:29;;8951:4;8942:29;;;;;;;;;;;;8714:262;;;:::o;11997:569::-;12138:8;2234:18;2255:9;:19;2265:8;2255:19;;;;;;;;;;;;;;;;;;;;;2234:40;;2309:10;2295:24;;:10;:24;;;:70;;;;2355:10;2329:36;;:12;:22;2342:8;2329:22;;;;;;;;;;;;;;;;;;;;;:36;;;2295:70;:120;;;;2375:16;:28;2392:10;2375:28;;;;;;;;;;;;;;;:40;2404:10;2375:40;;;;;;;;;;;;;;;;;;;;;;;;;2295:120;2423:30;;;;;;;;;;;;;;;;;2280:179;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12165:8:::1;2683:1;2652:33;;:9;:19;2662:8;2652:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2687:13;;;;;;;;;;;;;;;;::::0;2644:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12183:18:::2;12204:9;:19;12214:8;12204:19;;;;;;;;;;;;;;;;;;;;;12183:40;;12251:5;12237:19;;:10;:19;;;12258:9;;;;;;;;;;;;;;;;::::0;12229:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12297:1;12282:17;;:3;:17;;;;12301:12;;;;;;;;;;;;;;;;::::0;12274:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12321:24;12331:3;12336:8;12321:9;:24::i;:::-;12356:16;:3;:14;;;:16::i;:::-;12352:210;;;12386:13;12422:3;12402:41;;;12444:10;12456:5;12463:8;12473:5;12402:77;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12386:93;;1118:10;12505:24;;12495:34;;;:6;:34;;;;12531:23;;;;;;;;;;;;;;;;::::0;12487:68:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12352:210;;2707:1;2465::::1;11997:569:::0;;;;;;:::o;11574:154::-;11672:7;11696:19;:27;11716:6;11696:27;;;;;;;;;;;;;;;;11689:34;;11574:154;;;:::o;12693:104::-;12770:12;:22;12783:8;12770:22;;;;;;;;;;;;12763:29;;;;;;;;;;;12693:104;:::o;10572:224::-;10705:5;10682:28;;:9;:19;10692:8;10682:19;;;;;;;;;;;;;;;;;;;;;:28;;;10712:9;;;;;;;;;;;;;;;;;10674:48;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;10758:1;10728:19;:26;10748:5;10728:26;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;10772:9;:19;10782:8;10772:19;;;;;;;;;;;;10765:26;;;;;;;;;;;10572:224;;:::o;11055:231::-;11191:1;11160:33;;:9;:19;11170:8;11160:19;;;;;;;;;;;;;;;;;;;;;:33;;;11195:18;;;;;;;;;;;;;;;;;11152:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11243:3;11221:9;:19;11231:8;11221:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11280:1;11252:19;:24;11272:3;11252:24;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;11055:231;;:::o;476:762:12:-;554:17;986:16;1008:19;1030:66;1008:88;;;;1137:5;1125:18;1113:30;;1202:3;1190:15;;:8;:15;;:42;;;;;1221:11;1209:8;:23;;1190:42;1174:59;;476:762;;;;;:::o;7:139:15:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:137::-;336:5;374:6;361:20;352:29;;390:32;416:5;390:32;:::i;:::-;342:86;;;;:::o;434:141::-;490:5;521:6;515:13;506:22;;537:32;563:5;537:32;:::i;:::-;496:79;;;;:::o;594:351::-;651:8;661:6;711:3;704:4;696:6;692:17;688:27;678:2;;729:1;726;719:12;678:2;765:6;752:20;742:30;;795:18;787:6;784:30;781:2;;;827:1;824;817:12;781:2;864:4;856:6;852:17;840:29;;918:3;910:4;902:6;898:17;888:8;884:32;881:41;878:2;;;935:1;932;925:12;878:2;668:277;;;;;:::o;951:139::-;997:5;1035:6;1022:20;1013:29;;1051:33;1078:5;1051:33;:::i;:::-;1003:87;;;;:::o;1096:262::-;1155:6;1204:2;1192:9;1183:7;1179:23;1175:32;1172:2;;;1220:1;1217;1210:12;1172:2;1263:1;1288:53;1333:7;1324:6;1313:9;1309:22;1288:53;:::i;:::-;1278:63;;1234:117;1162:196;;;;:::o;1364:407::-;1432:6;1440;1489:2;1477:9;1468:7;1464:23;1460:32;1457:2;;;1505:1;1502;1495:12;1457:2;1548:1;1573:53;1618:7;1609:6;1598:9;1594:22;1573:53;:::i;:::-;1563:63;;1519:117;1675:2;1701:53;1746:7;1737:6;1726:9;1722:22;1701:53;:::i;:::-;1691:63;;1646:118;1447:324;;;;;:::o;1777:552::-;1854:6;1862;1870;1919:2;1907:9;1898:7;1894:23;1890:32;1887:2;;;1935:1;1932;1925:12;1887:2;1978:1;2003:53;2048:7;2039:6;2028:9;2024:22;2003:53;:::i;:::-;1993:63;;1949:117;2105:2;2131:53;2176:7;2167:6;2156:9;2152:22;2131:53;:::i;:::-;2121:63;;2076:118;2233:2;2259:53;2304:7;2295:6;2284:9;2280:22;2259:53;:::i;:::-;2249:63;;2204:118;1877:452;;;;;:::o;2335:829::-;2432:6;2440;2448;2456;2464;2513:3;2501:9;2492:7;2488:23;2484:33;2481:2;;;2530:1;2527;2520:12;2481:2;2573:1;2598:53;2643:7;2634:6;2623:9;2619:22;2598:53;:::i;:::-;2588:63;;2544:117;2700:2;2726:53;2771:7;2762:6;2751:9;2747:22;2726:53;:::i;:::-;2716:63;;2671:118;2828:2;2854:53;2899:7;2890:6;2879:9;2875:22;2854:53;:::i;:::-;2844:63;;2799:118;2984:2;2973:9;2969:18;2956:32;3015:18;3007:6;3004:30;3001:2;;;3047:1;3044;3037:12;3001:2;3083:64;3139:7;3130:6;3119:9;3115:22;3083:64;:::i;:::-;3065:82;;;;2927:230;2471:693;;;;;;;;:::o;3170:401::-;3235:6;3243;3292:2;3280:9;3271:7;3267:23;3263:32;3260:2;;;3308:1;3305;3298:12;3260:2;3351:1;3376:53;3421:7;3412:6;3401:9;3397:22;3376:53;:::i;:::-;3366:63;;3322:117;3478:2;3504:50;3546:7;3537:6;3526:9;3522:22;3504:50;:::i;:::-;3494:60;;3449:115;3250:321;;;;;:::o;3577:407::-;3645:6;3653;3702:2;3690:9;3681:7;3677:23;3673:32;3670:2;;;3718:1;3715;3708:12;3670:2;3761:1;3786:53;3831:7;3822:6;3811:9;3807:22;3786:53;:::i;:::-;3776:63;;3732:117;3888:2;3914:53;3959:7;3950:6;3939:9;3935:22;3914:53;:::i;:::-;3904:63;;3859:118;3660:324;;;;;:::o;3990:260::-;4048:6;4097:2;4085:9;4076:7;4072:23;4068:32;4065:2;;;4113:1;4110;4103:12;4065:2;4156:1;4181:52;4225:7;4216:6;4205:9;4201:22;4181:52;:::i;:::-;4171:62;;4127:116;4055:195;;;;:::o;4256:282::-;4325:6;4374:2;4362:9;4353:7;4349:23;4345:32;4342:2;;;4390:1;4387;4380:12;4342:2;4433:1;4458:63;4513:7;4504:6;4493:9;4489:22;4458:63;:::i;:::-;4448:73;;4404:127;4332:206;;;;:::o;4544:262::-;4603:6;4652:2;4640:9;4631:7;4627:23;4623:32;4620:2;;;4668:1;4665;4658:12;4620:2;4711:1;4736:53;4781:7;4772:6;4761:9;4757:22;4736:53;:::i;:::-;4726:63;;4682:117;4610:196;;;;:::o;4812:118::-;4899:24;4917:5;4899:24;:::i;:::-;4894:3;4887:37;4877:53;;:::o;4936:109::-;5017:21;5032:5;5017:21;:::i;:::-;5012:3;5005:34;4995:50;;:::o;5051:360::-;5137:3;5165:38;5197:5;5165:38;:::i;:::-;5219:70;5282:6;5277:3;5219:70;:::i;:::-;5212:77;;5298:52;5343:6;5338:3;5331:4;5324:5;5320:16;5298:52;:::i;:::-;5375:29;5397:6;5375:29;:::i;:::-;5370:3;5366:39;5359:46;;5141:270;;;;;:::o;5417:364::-;5505:3;5533:39;5566:5;5533:39;:::i;:::-;5588:71;5652:6;5647:3;5588:71;:::i;:::-;5581:78;;5668:52;5713:6;5708:3;5701:4;5694:5;5690:16;5668:52;:::i;:::-;5745:29;5767:6;5745:29;:::i;:::-;5740:3;5736:39;5729:46;;5509:272;;;;;:::o;5787:118::-;5874:24;5892:5;5874:24;:::i;:::-;5869:3;5862:37;5852:53;;:::o;5911:222::-;6004:4;6042:2;6031:9;6027:18;6019:26;;6055:71;6123:1;6112:9;6108:17;6099:6;6055:71;:::i;:::-;6009:124;;;;:::o;6139:640::-;6334:4;6372:3;6361:9;6357:19;6349:27;;6386:71;6454:1;6443:9;6439:17;6430:6;6386:71;:::i;:::-;6467:72;6535:2;6524:9;6520:18;6511:6;6467:72;:::i;:::-;6549;6617:2;6606:9;6602:18;6593:6;6549:72;:::i;:::-;6668:9;6662:4;6658:20;6653:2;6642:9;6638:18;6631:48;6696:76;6767:4;6758:6;6696:76;:::i;:::-;6688:84;;6339:440;;;;;;;:::o;6785:210::-;6872:4;6910:2;6899:9;6895:18;6887:26;;6923:65;6985:1;6974:9;6970:17;6961:6;6923:65;:::i;:::-;6877:118;;;;:::o;7001:313::-;7114:4;7152:2;7141:9;7137:18;7129:26;;7201:9;7195:4;7191:20;7187:1;7176:9;7172:17;7165:47;7229:78;7302:4;7293:6;7229:78;:::i;:::-;7221:86;;7119:195;;;;:::o;7320:222::-;7413:4;7451:2;7440:9;7436:18;7428:26;;7464:71;7532:1;7521:9;7517:17;7508:6;7464:71;:::i;:::-;7418:124;;;;:::o;7548:98::-;7599:6;7633:5;7627:12;7617:22;;7606:40;;;:::o;7652:99::-;7704:6;7738:5;7732:12;7722:22;;7711:40;;;:::o;7757:168::-;7840:11;7874:6;7869:3;7862:19;7914:4;7909:3;7905:14;7890:29;;7852:73;;;;:::o;7931:169::-;8015:11;8049:6;8044:3;8037:19;8089:4;8084:3;8080:14;8065:29;;8027:73;;;;:::o;8106:305::-;8146:3;8165:20;8183:1;8165:20;:::i;:::-;8160:25;;8199:20;8217:1;8199:20;:::i;:::-;8194:25;;8353:1;8285:66;8281:74;8278:1;8275:81;8272:2;;;8359:18;;:::i;:::-;8272:2;8403:1;8400;8396:9;8389:16;;8150:261;;;;:::o;8417:191::-;8457:4;8477:20;8495:1;8477:20;:::i;:::-;8472:25;;8511:20;8529:1;8511:20;:::i;:::-;8506:25;;8550:1;8547;8544:8;8541:2;;;8555:18;;:::i;:::-;8541:2;8600:1;8597;8593:9;8585:17;;8462:146;;;;:::o;8614:96::-;8651:7;8680:24;8698:5;8680:24;:::i;:::-;8669:35;;8659:51;;;:::o;8716:90::-;8750:7;8793:5;8786:13;8779:21;8768:32;;8758:48;;;:::o;8812:149::-;8848:7;8888:66;8881:5;8877:78;8866:89;;8856:105;;;:::o;8967:126::-;9004:7;9044:42;9037:5;9033:54;9022:65;;9012:81;;;:::o;9099:77::-;9136:7;9165:5;9154:16;;9144:32;;;:::o;9182:307::-;9250:1;9260:113;9274:6;9271:1;9268:13;9260:113;;;9359:1;9354:3;9350:11;9344:18;9340:1;9335:3;9331:11;9324:39;9296:2;9293:1;9289:10;9284:15;;9260:113;;;9391:6;9388:1;9385:13;9382:2;;;9471:1;9462:6;9457:3;9453:16;9446:27;9382:2;9231:258;;;;:::o;9495:320::-;9539:6;9576:1;9570:4;9566:12;9556:22;;9623:1;9617:4;9613:12;9644:18;9634:2;;9700:4;9692:6;9688:17;9678:27;;9634:2;9762;9754:6;9751:14;9731:18;9728:38;9725:2;;;9781:18;;:::i;:::-;9725:2;9546:269;;;;:::o;9821:180::-;9869:77;9866:1;9859:88;9966:4;9963:1;9956:15;9990:4;9987:1;9980:15;10007:180;10055:77;10052:1;10045:88;10152:4;10149:1;10142:15;10176:4;10173:1;10166:15;10193:102;10234:6;10285:2;10281:7;10276:2;10269:5;10265:14;10261:28;10251:38;;10241:54;;;:::o;10301:122::-;10374:24;10392:5;10374:24;:::i;:::-;10367:5;10364:35;10354:2;;10413:1;10410;10403:12;10354:2;10344:79;:::o;10429:116::-;10499:21;10514:5;10499:21;:::i;:::-;10492:5;10489:32;10479:2;;10535:1;10532;10525:12;10479:2;10469:76;:::o;10551:120::-;10623:23;10640:5;10623:23;:::i;:::-;10616:5;10613:34;10603:2;;10661:1;10658;10651:12;10603:2;10593:78;:::o;10677:122::-;10750:24;10768:5;10750:24;:::i;:::-;10743:5;10740:35;10730:2;;10789:1;10786;10779:12;10730:2;10720:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./nf-token.sol\";\nimport \"./erc721-metadata.sol\";\n\n/**\n * @dev Optional metadata implementation for ERC-721 non-fungible token standard.\n */\ncontract NFTokenMetadata is\n  NFToken,\n  ERC721Metadata\n{\n\n  /**\n   * @dev A descriptive name for a collection of NFTs.\n   */\n  string internal nftName;\n\n  /**\n   * @dev An abbreviated name for NFTokens.\n   */\n  string internal nftSymbol;\n\n  /**\n   * @dev Mapping from NFT ID to metadata uri.\n   */\n  mapping (uint256 => string) internal idToUri;\n\n  /**\n   * @dev Contract constructor.\n   * @notice When implementing this contract don't forget to set nftName and nftSymbol.\n   */\n  constructor()\n  {\n    supportedInterfaces[0x5b5e139f] = true; // ERC721Metadata\n  }\n\n  /**\n   * @dev Returns a descriptive name for a collection of NFTokens.\n   * @return _name Representing name.\n   */\n  function name()\n    external\n    override\n    view\n    returns (string memory _name)\n  {\n    _name = nftName;\n  }\n\n  /**\n   * @dev Returns an abbreviated name for NFTokens.\n   * @return _symbol Representing symbol.\n   */\n  function symbol()\n    external\n    override\n    view\n    returns (string memory _symbol)\n  {\n    _symbol = nftSymbol;\n  }\n\n  /**\n   * @dev A distinct URI (RFC 3986) for a given NFT.\n   * @param _tokenId Id for which we want uri.\n   * @return URI of _tokenId.\n   */\n  function tokenURI(\n    uint256 _tokenId\n  )\n    external\n    override\n    view\n    validNFToken(_tokenId)\n    returns (string memory)\n  {\n    return idToUri[_tokenId];\n  }\n\n  /**\n   * @dev Burns a NFT.\n   * @notice This is an internal function which should be called from user-implemented external\n   * burn function. Its purpose is to show and properly initialize data structures when using this\n   * implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n   * NFT.\n   * @param _tokenId ID of the NFT to be burned.\n   */\n  function _burn(\n    uint256 _tokenId\n  )\n    internal\n    override\n    virtual\n  {\n    super._burn(_tokenId);\n\n    delete idToUri[_tokenId];\n  }\n\n  /**\n   * @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n   * @notice This is an internal function which should be called from user-implemented external\n   * function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _tokenId Id for which we want URI.\n   * @param _uri String representing RFC 3986 URI.\n   */\n  function _setTokenUri(\n    uint256 _tokenId,\n    string memory _uri\n  )\n    internal\n    validNFToken(_tokenId)\n  {\n    idToUri[_tokenId] = _uri;\n  }\n\n}\n",
  "sourcePath": "/home/abhuntu/solidity/contracts/tokens/nf-token-metadata.sol",
  "ast": {
    "absolutePath": "/home/abhuntu/solidity/contracts/tokens/nf-token-metadata.sol",
    "exportedSymbols": {
      "AddressUtils": [
        1638
      ],
      "ERC165": [
        1650
      ],
      "ERC721": [
        499
      ],
      "ERC721Metadata": [
        368
      ],
      "ERC721TokenReceiver": [
        386
      ],
      "NFToken": [
        1606
      ],
      "NFTokenMetadata": [
        936
      ],
      "SupportsInterface": [
        1687
      ]
    },
    "id": 937,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 828,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:10"
      },
      {
        "absolutePath": "/home/abhuntu/solidity/contracts/tokens/nf-token.sol",
        "file": "./nf-token.sol",
        "id": 829,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 937,
        "sourceUnit": 1607,
        "src": "66:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/abhuntu/solidity/contracts/tokens/erc721-metadata.sol",
        "file": "./erc721-metadata.sol",
        "id": 830,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 937,
        "sourceUnit": 369,
        "src": "91:31:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 832,
              "name": "NFToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1606,
              "src": "244:7:10"
            },
            "id": 833,
            "nodeType": "InheritanceSpecifier",
            "src": "244:7:10"
          },
          {
            "baseName": {
              "id": 834,
              "name": "ERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 368,
              "src": "255:14:10"
            },
            "id": 835,
            "nodeType": "InheritanceSpecifier",
            "src": "255:14:10"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 831,
          "nodeType": "StructuredDocumentation",
          "src": "124:89:10",
          "text": " @dev Optional metadata implementation for ERC-721 non-fungible token standard."
        },
        "fullyImplemented": true,
        "id": 936,
        "linearizedBaseContracts": [
          936,
          368,
          1606,
          1687,
          1650,
          499
        ],
        "name": "NFTokenMetadata",
        "nameLocation": "223:15:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 836,
              "nodeType": "StructuredDocumentation",
              "src": "275:64:10",
              "text": " @dev A descriptive name for a collection of NFTs."
            },
            "id": 838,
            "mutability": "mutable",
            "name": "nftName",
            "nameLocation": "358:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 936,
            "src": "342:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 837,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "342:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 839,
              "nodeType": "StructuredDocumentation",
              "src": "370:53:10",
              "text": " @dev An abbreviated name for NFTokens."
            },
            "id": 841,
            "mutability": "mutable",
            "name": "nftSymbol",
            "nameLocation": "442:9:10",
            "nodeType": "VariableDeclaration",
            "scope": 936,
            "src": "426:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 840,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "426:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 842,
              "nodeType": "StructuredDocumentation",
              "src": "456:56:10",
              "text": " @dev Mapping from NFT ID to metadata uri."
            },
            "id": 846,
            "mutability": "mutable",
            "name": "idToUri",
            "nameLocation": "552:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 936,
            "src": "515:44:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 845,
              "keyType": {
                "id": 843,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "524:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "515:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 844,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "535:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 856,
              "nodeType": "Block",
              "src": "712:67:10",
              "statements": [
                {
                  "expression": {
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 850,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1661,
                        "src": "718:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 852,
                      "indexExpression": {
                        "hexValue": "30783562356531333966",
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "738:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "718:31:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "752:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "718:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "718:38:10"
                }
              ]
            },
            "documentation": {
              "id": 847,
              "nodeType": "StructuredDocumentation",
              "src": "564:129:10",
              "text": " @dev Contract constructor.\n @notice When implementing this contract don't forget to set nftName and nftSymbol."
            },
            "id": 857,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:2:10"
            },
            "returnParameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:0:10"
            },
            "scope": 936,
            "src": "696:83:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              353
            ],
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "987:26:10",
              "statements": [
                {
                  "expression": {
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 864,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "993:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 865,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 838,
                      "src": "1001:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "993:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "993:15:10"
                }
              ]
            },
            "documentation": {
              "id": 858,
              "nodeType": "StructuredDocumentation",
              "src": "783:114:10",
              "text": " @dev Returns a descriptive name for a collection of NFTokens.\n @return _name Representing name."
            },
            "functionSelector": "06fdde03",
            "id": 869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "909:4:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 860,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "933:8:10"
            },
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:2:10"
            },
            "returnParameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 862,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "978:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "964:19:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "963:21:10"
            },
            "scope": 936,
            "src": "900:113:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              359
            ],
            "body": {
              "id": 880,
              "nodeType": "Block",
              "src": "1214:30:10",
              "statements": [
                {
                  "expression": {
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 876,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "1220:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 877,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "1230:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1220:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:19:10"
                }
              ]
            },
            "documentation": {
              "id": 870,
              "nodeType": "StructuredDocumentation",
              "src": "1017:103:10",
              "text": " @dev Returns an abbreviated name for NFTokens.\n @return _symbol Representing symbol."
            },
            "functionSelector": "95d89b41",
            "id": 881,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1132:6:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 872,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1158:8:10"
            },
            "parameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1138:2:10"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1203:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "1189:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1188:23:10"
            },
            "scope": 936,
            "src": "1123:121:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              367
            ],
            "body": {
              "id": 897,
              "nodeType": "Block",
              "src": "1526:35:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 893,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 846,
                      "src": "1539:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 895,
                    "indexExpression": {
                      "id": 894,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "1547:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1539:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 892,
                  "id": 896,
                  "nodeType": "Return",
                  "src": "1532:24:10"
                }
              ]
            },
            "documentation": {
              "id": 882,
              "nodeType": "StructuredDocumentation",
              "src": "1248:139:10",
              "text": " @dev A distinct URI (RFC 3986) for a given NFT.\n @param _tokenId Id for which we want uri.\n @return URI of _tokenId."
            },
            "functionSelector": "c87b56dd",
            "id": 898,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 888,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 884,
                    "src": "1486:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 889,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 887,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1083,
                  "src": "1473:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1473:22:10"
              }
            ],
            "name": "tokenURI",
            "nameLocation": "1399:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 886,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1451:8:10"
            },
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1421:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "1413:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1407:26:10"
            },
            "returnParameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "1509:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1509:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1508:15:10"
            },
            "scope": 936,
            "src": "1390:171:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1446
            ],
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "2035:63:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 908,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "2053:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 905,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2041:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadata_$936_$",
                          "typeString": "type(contract super NFTokenMetadata)"
                        }
                      },
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1446,
                      "src": "2041:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2041:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 910,
                  "nodeType": "ExpressionStatement",
                  "src": "2041:21:10"
                },
                {
                  "expression": {
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2069:24:10",
                    "subExpression": {
                      "baseExpression": {
                        "id": 911,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "2076:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 913,
                      "indexExpression": {
                        "id": 912,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "2084:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2076:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 915,
                  "nodeType": "ExpressionStatement",
                  "src": "2069:24:10"
                }
              ]
            },
            "documentation": {
              "id": 899,
              "nodeType": "StructuredDocumentation",
              "src": "1565:386:10",
              "text": " @dev Burns a NFT.\n @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @param _tokenId ID of the NFT to be burned."
            },
            "id": 917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "1963:5:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 903,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2012:8:10"
            },
            "parameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1982:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "1974:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1968:26:10"
            },
            "returnParameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2035:0:10"
            },
            "scope": 936,
            "src": "1954:144:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 934,
              "nodeType": "Block",
              "src": "2597:35:10",
              "statements": [
                {
                  "expression": {
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 928,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "2603:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 930,
                      "indexExpression": {
                        "id": 929,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 920,
                        "src": "2611:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2603:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 931,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 922,
                      "src": "2623:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2603:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "2603:24:10"
                }
              ]
            },
            "documentation": {
              "id": 918,
              "nodeType": "StructuredDocumentation",
              "src": "2102:378:10",
              "text": " @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n @notice This is an internal function which should be called from user-implemented external\n function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @param _tokenId Id for which we want URI.\n @param _uri String representing RFC 3986 URI."
            },
            "id": 935,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 925,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 920,
                    "src": "2585:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 926,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 924,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1083,
                  "src": "2572:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "2572:22:10"
              }
            ],
            "name": "_setTokenUri",
            "nameLocation": "2492:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 920,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2518:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "2510:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 919,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2510:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 922,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "2546:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "2532:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 921,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2532:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2504:50:10"
            },
            "returnParameters": {
              "id": 927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2597:0:10"
            },
            "scope": 936,
            "src": "2483:149:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 937,
        "src": "214:2421:10",
        "usedErrors": []
      }
    ],
    "src": "32:2604:10"
  },
  "legacyAST": {
    "absolutePath": "/home/abhuntu/solidity/contracts/tokens/nf-token-metadata.sol",
    "exportedSymbols": {
      "AddressUtils": [
        1638
      ],
      "ERC165": [
        1650
      ],
      "ERC721": [
        499
      ],
      "ERC721Metadata": [
        368
      ],
      "ERC721TokenReceiver": [
        386
      ],
      "NFToken": [
        1606
      ],
      "NFTokenMetadata": [
        936
      ],
      "SupportsInterface": [
        1687
      ]
    },
    "id": 937,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 828,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:10"
      },
      {
        "absolutePath": "/home/abhuntu/solidity/contracts/tokens/nf-token.sol",
        "file": "./nf-token.sol",
        "id": 829,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 937,
        "sourceUnit": 1607,
        "src": "66:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/abhuntu/solidity/contracts/tokens/erc721-metadata.sol",
        "file": "./erc721-metadata.sol",
        "id": 830,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 937,
        "sourceUnit": 369,
        "src": "91:31:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 832,
              "name": "NFToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1606,
              "src": "244:7:10"
            },
            "id": 833,
            "nodeType": "InheritanceSpecifier",
            "src": "244:7:10"
          },
          {
            "baseName": {
              "id": 834,
              "name": "ERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 368,
              "src": "255:14:10"
            },
            "id": 835,
            "nodeType": "InheritanceSpecifier",
            "src": "255:14:10"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 831,
          "nodeType": "StructuredDocumentation",
          "src": "124:89:10",
          "text": " @dev Optional metadata implementation for ERC-721 non-fungible token standard."
        },
        "fullyImplemented": true,
        "id": 936,
        "linearizedBaseContracts": [
          936,
          368,
          1606,
          1687,
          1650,
          499
        ],
        "name": "NFTokenMetadata",
        "nameLocation": "223:15:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 836,
              "nodeType": "StructuredDocumentation",
              "src": "275:64:10",
              "text": " @dev A descriptive name for a collection of NFTs."
            },
            "id": 838,
            "mutability": "mutable",
            "name": "nftName",
            "nameLocation": "358:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 936,
            "src": "342:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 837,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "342:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 839,
              "nodeType": "StructuredDocumentation",
              "src": "370:53:10",
              "text": " @dev An abbreviated name for NFTokens."
            },
            "id": 841,
            "mutability": "mutable",
            "name": "nftSymbol",
            "nameLocation": "442:9:10",
            "nodeType": "VariableDeclaration",
            "scope": 936,
            "src": "426:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 840,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "426:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 842,
              "nodeType": "StructuredDocumentation",
              "src": "456:56:10",
              "text": " @dev Mapping from NFT ID to metadata uri."
            },
            "id": 846,
            "mutability": "mutable",
            "name": "idToUri",
            "nameLocation": "552:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 936,
            "src": "515:44:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 845,
              "keyType": {
                "id": 843,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "524:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "515:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 844,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "535:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 856,
              "nodeType": "Block",
              "src": "712:67:10",
              "statements": [
                {
                  "expression": {
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 850,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1661,
                        "src": "718:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 852,
                      "indexExpression": {
                        "hexValue": "30783562356531333966",
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "738:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "718:31:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "752:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "718:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "718:38:10"
                }
              ]
            },
            "documentation": {
              "id": 847,
              "nodeType": "StructuredDocumentation",
              "src": "564:129:10",
              "text": " @dev Contract constructor.\n @notice When implementing this contract don't forget to set nftName and nftSymbol."
            },
            "id": 857,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:2:10"
            },
            "returnParameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:0:10"
            },
            "scope": 936,
            "src": "696:83:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              353
            ],
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "987:26:10",
              "statements": [
                {
                  "expression": {
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 864,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "993:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 865,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 838,
                      "src": "1001:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "993:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "993:15:10"
                }
              ]
            },
            "documentation": {
              "id": 858,
              "nodeType": "StructuredDocumentation",
              "src": "783:114:10",
              "text": " @dev Returns a descriptive name for a collection of NFTokens.\n @return _name Representing name."
            },
            "functionSelector": "06fdde03",
            "id": 869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "909:4:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 860,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "933:8:10"
            },
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:2:10"
            },
            "returnParameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 862,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "978:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "964:19:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "963:21:10"
            },
            "scope": 936,
            "src": "900:113:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              359
            ],
            "body": {
              "id": 880,
              "nodeType": "Block",
              "src": "1214:30:10",
              "statements": [
                {
                  "expression": {
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 876,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "1220:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 877,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "1230:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1220:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:19:10"
                }
              ]
            },
            "documentation": {
              "id": 870,
              "nodeType": "StructuredDocumentation",
              "src": "1017:103:10",
              "text": " @dev Returns an abbreviated name for NFTokens.\n @return _symbol Representing symbol."
            },
            "functionSelector": "95d89b41",
            "id": 881,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1132:6:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 872,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1158:8:10"
            },
            "parameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1138:2:10"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1203:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "1189:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1188:23:10"
            },
            "scope": 936,
            "src": "1123:121:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              367
            ],
            "body": {
              "id": 897,
              "nodeType": "Block",
              "src": "1526:35:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 893,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 846,
                      "src": "1539:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 895,
                    "indexExpression": {
                      "id": 894,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "1547:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1539:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 892,
                  "id": 896,
                  "nodeType": "Return",
                  "src": "1532:24:10"
                }
              ]
            },
            "documentation": {
              "id": 882,
              "nodeType": "StructuredDocumentation",
              "src": "1248:139:10",
              "text": " @dev A distinct URI (RFC 3986) for a given NFT.\n @param _tokenId Id for which we want uri.\n @return URI of _tokenId."
            },
            "functionSelector": "c87b56dd",
            "id": 898,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 888,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 884,
                    "src": "1486:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 889,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 887,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1083,
                  "src": "1473:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1473:22:10"
              }
            ],
            "name": "tokenURI",
            "nameLocation": "1399:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 886,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1451:8:10"
            },
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1421:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "1413:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1407:26:10"
            },
            "returnParameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "1509:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1509:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1508:15:10"
            },
            "scope": 936,
            "src": "1390:171:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1446
            ],
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "2035:63:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 908,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "2053:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 905,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2041:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadata_$936_$",
                          "typeString": "type(contract super NFTokenMetadata)"
                        }
                      },
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1446,
                      "src": "2041:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2041:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 910,
                  "nodeType": "ExpressionStatement",
                  "src": "2041:21:10"
                },
                {
                  "expression": {
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2069:24:10",
                    "subExpression": {
                      "baseExpression": {
                        "id": 911,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "2076:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 913,
                      "indexExpression": {
                        "id": 912,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "2084:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2076:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 915,
                  "nodeType": "ExpressionStatement",
                  "src": "2069:24:10"
                }
              ]
            },
            "documentation": {
              "id": 899,
              "nodeType": "StructuredDocumentation",
              "src": "1565:386:10",
              "text": " @dev Burns a NFT.\n @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @param _tokenId ID of the NFT to be burned."
            },
            "id": 917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "1963:5:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 903,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2012:8:10"
            },
            "parameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1982:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "1974:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1968:26:10"
            },
            "returnParameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2035:0:10"
            },
            "scope": 936,
            "src": "1954:144:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 934,
              "nodeType": "Block",
              "src": "2597:35:10",
              "statements": [
                {
                  "expression": {
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 928,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "2603:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 930,
                      "indexExpression": {
                        "id": 929,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 920,
                        "src": "2611:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2603:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 931,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 922,
                      "src": "2623:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2603:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "2603:24:10"
                }
              ]
            },
            "documentation": {
              "id": 918,
              "nodeType": "StructuredDocumentation",
              "src": "2102:378:10",
              "text": " @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n @notice This is an internal function which should be called from user-implemented external\n function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @param _tokenId Id for which we want URI.\n @param _uri String representing RFC 3986 URI."
            },
            "id": 935,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 925,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 920,
                    "src": "2585:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 926,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 924,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1083,
                  "src": "2572:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "2572:22:10"
              }
            ],
            "name": "_setTokenUri",
            "nameLocation": "2492:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 920,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2518:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "2510:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 919,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2510:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 922,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "2546:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "2532:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 921,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2532:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2504:50:10"
            },
            "returnParameters": {
              "id": 927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2597:0:10"
            },
            "scope": 936,
            "src": "2483:149:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 937,
        "src": "214:2421:10",
        "usedErrors": []
      }
    ],
    "src": "32:2604:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-04T17:19:28.648Z",
  "devdoc": {
    "details": "Optional metadata implementation for ERC-721 non-fungible token standard.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "returns": {
          "_0": "Balance of _owner."
        }
      },
      "constructor": {
        "details": "Contract constructor."
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "returns": {
          "_0": "Address that _tokenId is approved for."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "returns": {
          "_0": "True if approved for all, false otherwise."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "returns": {
          "_name": "Representing name."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "returns": {
          "_owner": "Address of _tokenId owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "returns": {
          "_symbol": "Representing symbol."
        }
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "returns": {
          "_0": "URI of _tokenId."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    },
    "stateVariables": {
      "idToUri": {
        "details": "Mapping from NFT ID to metadata uri."
      },
      "nftName": {
        "details": "A descriptive name for a collection of NFTs."
      },
      "nftSymbol": {
        "details": "An abbreviated name for NFTokens."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "constructor": {
        "notice": "When implementing this contract don't forget to set nftName and nftSymbol."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost."
      }
    },
    "version": 1
  }
}